plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.71'
}

version = mod_version
group = 'xfacthd.packetlogger'

base {
    archivesName = 'PacketLogger'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft.accessTransformers.file project.file('src/main/resources/META-INF/accesstransformer.cfg')

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
runs {
    configureEach {
        // systemProperty  'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
        systemProperty  'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        workingDirectory project.file('run')
    }

    server {
        workingDirectory project.file('run_server')

        programArgument '--nogui'
    }

    data {
        workingDirectory project.file('run')

        programArguments.addAll '--mod', 'packetlogger', '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
}

dependencies {
    implementation("net.neoforged:neoforge:${neoforge_version}")
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version: minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neoforge_version: neoforge_version,
            neoforge_version_range: neoforge_version_range,
            loader_version_range: loader_version_range,
            mod_version: mod_version
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title"     : "packetlogger",
                "Specification-Vendor"    : "XFactHD",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "XFactHD"
        ])
    }

    // The settings below make sure that your build is reproducible
    // More information at https://docs.gradle.org/current/userguide/working_with_files.html#sec:reproducible_archives
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

publishing {
    publications {
        register ('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
